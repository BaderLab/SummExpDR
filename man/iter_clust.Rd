% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IterativeClustering.R
\name{iter_clust}
\alias{iter_clust}
\title{Iteratively run clustering w/ or w/o resampling}
\usage{
iter_clust(
  x,
  k,
  std_norm = T,
  num_iter = 200,
  algorithm = "spectral_kernlab",
  resample = F,
  pct_resample = 0.8,
  affi_K = 20,
  sigma = 0.5,
  base_seed = 2,
  n_cores = NULL,
  pbar = FALSE
)
}
\arguments{
\item{x}{matrix_ samples in rows, features in columns
in future versions may allow for a list of matrices
for SNF based clustering}

\item{k}{integer of length 1_ number of clusters}

\item{std_norm}{standard normalize data prior to clustering?
and is set prior to sampling the data_}

\item{num_iter}{numeric, length 1_ number of iterations of clustering_
Note that if we are running a deterministic clustering algorithm
without resampling, this argument automatically gets set to 1}

\item{algorithm}{character_ spectral_kernlab runs spectral clustering as implemented in kernlab package,
spectral_SNFtool runs spectral clustering as implemented in SNFtool package, kmeans runs
kmeans clustering as implemented in \code{\link{stats::kmeans}} package}

\item{resample}{logical, length 1_ whether or not to resample data
in each iteration_ If this is the case, and an affinity matrix must
be calculated (this is the case for spectral clustering), then
the affinity matrix is recalculated for each iteration based on
data in resample_}

\item{pct_resample}{percentage of data to resample_ Specify as number
greater than 0 and less than 1}

\item{affi_K}{numeric, length 1_ K value for affinityMatrix_
used if algorithm = 'spectral_SNFtool' or 'spectral_kernlab'}

\item{sigma}{numeric of length 1_ sigma value for affinityMatrix_
used if algorithm = 'spectral_kernlab' or 'spectral_SNFtool'}

\item{base_seed}{integer of length 1_ lowest seed in range
base_seed:(base_seed + num_iter - 1) used for resampling,
and in case of clustering with restarts, clustering_ For resampling,
in each iteration, the seed used is incremented up in this range,
and before clustering the seed is reset to the current seed in the range
(i_e_ in a given iteration the seed set for resampling and clustering are
the same)}

\item{n_cores}{number of cores to use}

\item{pbar}{progress bar}
}
\value{
a matrix where each row is a clustering result_ If resampling
applied, then each clustering result returned in the matrix has cluster
labels for samples within the resampling subset of the given iteration,
and zero labels for samples not included in the resample_
}
\description{
Iteratively run clustering w/ or w/o resampling
}
\details{
TODO
}
